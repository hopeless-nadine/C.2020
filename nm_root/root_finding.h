typedef double Real;
typedef Real (*RRFunc)(Real x);
#define ITERATION 100000
#define NA_OK 1 // ошибок нет
#define NA_Converge 0 // недостаточная точность
#define NA_Segment -1 // неверный отрезок

/*
    Вычисление корня уравнения f(x)=0 на данном отрезке с заданной точностью ε и методом деления пополам.

    Параметры:
        a: начало отрезка.
        b: конец отрезка.
        eps: точность.
        RRPfunc: функция f.
        err: код ошибки.
        
	Проверяем условие f(a)·f(b) < 0. Если это не так, сигнализируем об ошибке.
	Пока модуль (b - a) > eps и не достигнуто максимально установеленное количество итераций цикла выполняется следующее:
		Иначе делим отрезок попалам и вводим среднюю точку x = (a + b)/2.
		Если f(b)·f(x) < 0, то a = x, иначе если f(a)·f(x) < 0, то b = x.
	Если достигнуто максимально установеленное количество итераций цикла, сигнализируем об ошибке.
	Если модуль (b - a) < eps, то возвращаем х - найденный корень.
	
	Возвращаемое значение:
		Функция возвращает x и записывает код ошибки.	
*/

Real find_root_dichotomy(RRFunc f, Real a, Real b, Real eps, int *err);
